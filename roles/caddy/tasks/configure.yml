---

- name: Configure Caddy
  become: true
  block:
    - name: Clean up old Caddy vhost files
      tags: caddy.vhosts
      ansible.builtin.find:
        paths: "{{ caddy_config_path }}/vhosts"
        patterns: "*"
      register: existing_vhosts
      when: caddy_rm_unmanaged_vhosts

    # - name: Remove old Caddy vhost files
    #   tags: caddy.vhosts
    #   ansible.builtin.file:
    #     path: "{{ item.path }}"
    #     state: absent
    #   loop: "{{ existing_vhosts.files | default([]) }}"
    #   when: item.path | basename not in caddy_vhosts | map(attribute='name') | list

    - name: Rewrite Caddyfile
      ansible.builtin.template:
        src: Caddyfile.j2
        dest: "{{ caddy_config_path }}/Caddyfile"
        mode: "0644"
        owner: "{{ caddy_user_name }}"
        group: '{{ caddy_group_name }}'
        lstrip_blocks: true
      notify: Reload caddy

    - name: Rewrite config snippets
      ansible.builtin.template:
        mode: "0644"
        src: 'snippets/{{ item }}.j2'
        dest: "{{ caddy_config_path }}/snippets/{{ item }}"
        owner: "{{ caddy_user_name }}"
        group: '{{ caddy_group_name }}'
      loop:
        - tls.conf
        - protected.conf
        - layer4.conf
      notify: Reload caddy

    - name: Create .env file
      ansible.builtin.template:
        src: templates/dot_env.j2
        dest: '{{ caddy_config_path }}/.env'
        owner: '{{ caddy_user_name }}'
        group: '{{ caddy_group_name }}'
        mode: '0640'
      vars:
        secrets:
          - key: CLOUDFLARE_API_TOKEN
            value: '{{ lookup("community.general.onepassword", "Caddy Cloudflare Token", vault="HomeLab") }}'

    - name: Configure vhosts
      ansible.builtin.include_tasks: vhosts.yml
      tags: caddy.vhosts
      loop: "{{ groups['proxmox_all_lxc'] }}"
      loop_control:
        loop_var: lxc_host
